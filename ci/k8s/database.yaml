apiVersion: v1
kind: Secret
metadata:
  name: database-config
stringData:
  database-startup.sh: |
    #!/bin/bash
    set -e
    
    psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
      CREATE DATABASE develop;
      CREATE DATABASE release;
      \c develop;
      CREATE EXTENSION Postgis;
      \c release;
      CREATE EXTENSION Postgis;
    EOSQL
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: 23ws-ase-pr-inso-06-db
  namespace: 23ws-ase-pr-inso-06
spec:
  selector:
    matchLabels:
      app: 23ws-ase-pr-inso-06-db
  replicas: 1
  template:
    metadata:
      labels:
        app: 23ws-ase-pr-inso-06-db
    spec:
      imagePullSecrets:
      - name: secret-dockercfg
      volumes:
      - name: database-config
        secret:
          secretName: database-config
      containers:
        - name: postgres
          image: postgis/postgis:latest
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
              ephemeral-storage: "100Mi"
            limits:
              memory: "512Mi"
              cpu: "250m"
              ephemeral-storage: "100Mi"
          ports:
            - containerPort: 5432
          env:
          - name: POSTGRES_PASSWORD
            value: "example"
          livenessProbe:
            initialDelaySeconds: 10
            exec:
              command:
              - "psql"
              - "-U"
              - "postgres"
              - "-c"
              - "\\c"
          volumeMounts:
          - name: database-config
            mountPath: /docker-entrypoint-initdb.d/database-startup.sh
            readOnly: true
            subPath: database-startup.sh
        - name: adminer
          image: adminer:latest
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
              ephemeral-storage: "100Mi"
            limits:
              memory: "512Mi"
              cpu: "250m"
              ephemeral-storage: "100Mi"
          ports:
          - containerPort: 8080
  strategy:
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 2
---
apiVersion: v1
kind: Service
metadata:
  name: s-23ws-ase-pr-inso-06-db-service
  namespace: 23ws-ase-pr-inso-06
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: 23ws-ase-pr-inso-06-db
  ports:
    - port: 8080
      name: "adminer"
    - port: 5432
      name: "postgresql"